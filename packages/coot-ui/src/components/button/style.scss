@use '~@/style/mixin.scss' as *;
@use '~@/style/config.scss' as *;

$button-status: primary, success, danger, warning;
$button-type: primary, outline, dashed, link, text;

:host {
  display: inline-flex;
  align-items: center;

  @each $status in $button-status {
    --button-#{$status}: var(--#{$prefix}-#{$status});
    --button-#{$status}-hover: var(--#{$prefix}-#{$status}-hover);
    --button-#{$status}-active: var(--#{$prefix}-#{$status}-active);
    --button-#{$status}-disable: var(--#{$prefix}-#{$status}-disable);
  }

  @each $size in $component-size {
    --button-size-#{$size}: var(--#{$prefix}-height-#{$size});
    --button-horizon-padding-#{$size}: var(
      --#{$prefix}-horizon-padding-#{$size}
    );
    --button-font-size-#{$size}: var(--#{$prefix}-font-size-#{$size});
  }

  --button-text-color: var(--#{$prefix}-color-text-main);
  --button-text-disable: var(--#{$prefix}-color-text-disable);
  --button-border: var(--#{$prefix}-gray-4);
  --button-radius: var(--#{$prefix}-radius);
  --button-font-family: var(--#{$prefix}-font-family);
}

@include b(button) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  column-gap: 4px;
  justify-content: center;
  box-sizing: border-box;
  border: 1px solid var(--button-border);
  border-radius: var(--button-radius);
  background-color: transparent;
  color: var(--button-text-color);
  cursor: pointer;
  font-family: var(--button-font-family);

  @include when(long) {
    width: 100%;
  }

  @each $size in $component-size {
    @include m(size-#{$size}) {
      height: var(--button-size-#{$size});
      padding: 0 var(--button-horizon-padding-#{$size});
      font-size: var(--button-font-size-#{$size});
      @include when(round) {
        border-radius: calc(var(--button-size-#{$size}) / 2);
      }
      @include when(circle) {
        border-radius: calc(var(--button-size-#{$size}) / 2);
        padding: 0;
        min-width: var(--button-size-#{$size});
      }
      @include when(square) {
        padding: 0;
        min-width: var(--button-size-#{$size});
      }
      @include when(loading-fixed) {
        padding: 0 calc(var(--button-horizon-padding-#{$size}) - 0.5em - 2px);
      }
    }
  }

  @each $type in $button-type {
    @include m(type-#{$type}) {
      color: var(--button-primary);
      border-color: var(--button-primary);
    }
  }

  @include m(type-dashed) {
    border-style: dashed;
  }

  @include m(type-link) {
    border-style: none;
  }

  @include m(type-text) {
    border-style: none;
  }

  @each $status in $button-status {
    @include m(status-#{$status}) {
      color: var(--button-#{$status});
      border-color: var(--button-#{$status});
      @include when(disabled) {
        cursor: not-allowed;
        &,
        &:active,
        &:hover {
          color: var(--button-#{$status}-disable);
          border-color: var(--button-#{$status}-disable);
        }
      }
      &.#{$prefix}-button-type-default,
      &.#{$prefix}-button-type-dashed {
        color: var(--button-text-color);
        border-color: var(--button-border);
        @include when(disabled) {
          color: var(--button-text-disable);
          &:hover,
          &:active {
            border-color: var(--button-border);
          }
        }
      }
      &.#{$prefix}-button-type-text {
        color: var(--button-text-color);
        @include when(disabled) {
          color: var(--button-text-disable);
        }
      }
      &:hover {
        color: var(--button-#{$status}-hover);
        border-color: var(--button-#{$status}-hover);
      }
      &:active {
        color: var(--button-#{$status}-active);
        border-color: var(--button-#{$status}-active);
      }

      &.#{$prefix}-button-type-primary {
        color: white;
        background-color: var(--button-#{$status});
        &:hover {
          background-color: var(--button-#{$status}-hover);
          color: white;
        }
        &:active {
          background-color: var(--button-#{$status}-active);
          color: white;
        }
        @include when(disabled) {
          &,
          &:hover,
          &:active {
            background-color: var(--button-#{$status}-disable);
          }
        }
      }

      &.#{$prefix}-button-type-outline {
        &:hover {
          border-color: var(--button-#{$status});
          background-color: var(--button-#{$status});
          color: white;
        }
        &:active {
          border-color: var(--button-#{$status}-active);
          background-color: var(--button-#{$status}-active);
          color: white;
        }
        @include when(disabled) {
          &,
          &:active,
          &:hover {
            color: var(--button-#{$status}-disable);
            border-color: var(--button-#{$status}-disable);
            background-color: transparent;
          }
        }
      }
    }
  }
}
